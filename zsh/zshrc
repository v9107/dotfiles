# refresence from `https://salferrarello.com/zsh-git-status-prompt/`
# Autoload zsh add-zsh-hook and vcs_info functions (-U autoload w/o substition, -z use zsh style)
autoload -Uz add-zsh-hook vcs_info
# Enable substitution in the prompt.
setopt prompt_subst
# Run vcs_info just before a prompt is displayed (precmd)
function precmd_vcs_info() { 
    vcs_info 
}
add-zsh-hook precmd precmd_vcs_info

PROMPT='%B%F{black}%m%f%b %~ %F{red}${vcs_info_msg_0_}%f
%B%F{magenta}=>%f%b '
#RPROMPT='%F{red}${vcs_info_msg_0_}%f'              # user RPROMPT for displying text on the right side of the screen

# Enable checking for (un)staged changes, enabling use of %u and %c
zstyle ':vcs_info:*' check-for-changes true
# Set custom strings for an unstaged vcs repo changes (*) and staged changes (+)
zstyle ':vcs_info:*' unstagedstr ' *'
zstyle ':vcs_info:*' stagedstr ' +'
# Set the format of the Git information for vcs_info
zstyle ':vcs_info:git:*' formats       '(%b%u%c)'
zstyle ':vcs_info:git:*' actionformats '(%b|%a%u%c)'

# Add deno completions to search path
if [[ ":$FPATH:" != *":/home/venkatesh/.zsh/completions:"* ]]; then export FPATH="/home/venkatesh/.zsh/completions:$FPATH"; fi
source "$HOME/opt/zsh-plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
# source "$HOME/opt/zsh-plugins/zsh-autosuggestions/zsh-autosuggestions.zsh"

# init ocaml
eval $(opam env --switch=default)

export TMUX_TMPDIR='/tmp'

# evaluate starship prompt
eval "$(starship init zsh)"

# alias vi="nvim"
alias vi="nvim"
alias ls="ls --color=auto"
alias ll="ls -l"
alias lla="ls -Al"
alias cls="clear"
alias tmux="tmux -u"
alias lg="lazygit"

GO="$HOME/opt/go/bin"
GOPKG="$($GO/go env GOPATH)/bin"
# ZIG="$HOME/opt/zig-linux-x86_64-0.12.0-dev.3336+dbb11915b"
# export PATH=$PATH:$GO:$GOPKG:$ZIG
export PATH=$PATH:$GO:$GOPKG

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

[ -f "/home/venkatesh/.ghcup/env" ] && . "/home/venkatesh/.ghcup/env" # ghcup-env

# bun completions
[ -s "/home/venkatesh/.bun/_bun" ] && source "/home/venkatesh/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
. "/home/venkatesh/.deno/env"

# pnpm
export PNPM_HOME="/home/venkatesh/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end
